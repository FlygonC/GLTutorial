#version 410

in vec4 vPosition;

in vec4 vNormal;
in vec4 vTangent;
in vec3 vBiTangent;

in vec2 vTexCoord;

layout(location = 0) out vec3 gpassAlbedo;
layout(location = 1) out vec3 gpassPosition;
layout(location = 2) out vec3 gpassNormal;
layout(location = 3) out vec4 gpassSpecular;
layout(location = 4) out vec3 gpassGlow;

uniform mat4 View;

uniform float specPower;

uniform vec3 ambientLight;

uniform vec3 diffuseTint;
uniform vec3 specularTint;
uniform vec3 glowTint;

uniform sampler2D diffuseMap;
uniform sampler2D normalMap;
uniform sampler2D specularMap;
uniform sampler2D glowMap;

void main() {
	
	//Color
	gpassAlbedo = diffuseTint + texture(diffuseMap, vTexCoord).xyz;
	
	//Position
	gpassPosition = vPosition.xyz;
	
	//Normals
	mat3 TBN = mat3( normalize( vTangent ).xyz, 
					 normalize( vBiTangent ), 
					 normalize( vNormal ).xyz);
	vec3 N = texture( normalMap, vTexCoord ).xyz * 2 - 1;
	gpassNormal = (View * vec4(TBN * N,0)).xyz;

	//Specular
	gpassSpecular.xyz = specularTint + texture(specularMap, vTexCoord).xyz;
	gpassSpecular.a = specPower;
	
	//Glow
	gpassGlow = glowTint + ambientLight + texture(glowMap, vTexCoord).xyz;
}